<controls:MetroWindow x:Class="XenoKit.Windows.EAN.EanModiferForm"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:XenoKit.Windows.EAN"
        xmlns:ean="clr-namespace:Xv2CoreLib.EAN;assembly=Xv2CoreLib"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        mc:Ignorable="d"
        Title="EanModiferForm" Height="Auto" Width="300" ShowInTaskbar="True" ResizeMode="NoResize" WindowStartupLocation="CenterOwner" ShowIconOnTitleBar="False" SizeToContent="Height" Name="Window" Activated="Window_Activated" TitleCharacterCasing="Normal">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="boolToVisibility" />
        <ObjectDataProvider x:Key="componentTypes" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="ean:EAN_AnimationComponent+ComponentType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="Return" Command="{Binding ElementName=Window, Path=DoneCommand}"/>
    </Window.InputBindings>
    <Grid>
        <StackPanel Margin="0, 2">
            <Grid Margin="2,2,0,0" Width="250" Visibility="{Binding StartFrameEnabled, Converter={StaticResource boolToVisibility}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="Start Frame"/>
                <controls:NumericUpDown x:Name="startFrame" Grid.Column="1" Value="{Binding StartFrame, UpdateSourceTrigger=PropertyChanged}" Maximum="{Binding StartFrameMaxConstraint}" Minimum="0"/>
            </Grid>
            <Grid Margin="2,2,0,0" Width="250" Visibility="{Binding EndFrameEnabled, Converter={StaticResource boolToVisibility}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="End Frame"/>
                <controls:NumericUpDown x:Name="endFrame"  Grid.Column="1" Value="{Binding EndFrame}" Maximum="65535" Minimum="{Binding EndFrameMinConstraint}"/>
            </Grid>
            <Grid Margin="2,2,0,0" Width="250" Visibility="{Binding ShakeFactorEnabled, Converter={StaticResource boolToVisibility}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="Factor"/>
                <controls:NumericUpDown x:Name="factor"  Grid.Column="1" Value="{Binding ShakeFactor}" Maximum="50" Minimum="0"/>
            </Grid>
            <Grid Margin="2,2,0,0" Width="250" Visibility="{Binding BlendFactorEnabled, Converter={StaticResource boolToVisibility}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="Blend Factor"/>
                <controls:NumericUpDown x:Name="blendFactor"  Grid.Column="1" Value="{Binding BlendFactor}" Maximum="1" Minimum="0"/>
            </Grid>
            <Grid Margin="2,2,0,0" Width="250" Visibility="{Binding BlendFactorEnabled, Converter={StaticResource boolToVisibility}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="Blend Factor Step" FontSize="11"/>
                <controls:NumericUpDown x:Name="blendFactorStep"  Grid.Column="1" Value="{Binding BlendFactorStep}" Maximum="1" Minimum="0"/>
            </Grid>
            <Grid Margin="2,2,0,0" Width="250" Visibility="{Binding InsertEnabled, Converter={StaticResource boolToVisibility}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="70"/>
                </Grid.ColumnDefinitions>
                <Label Content="Insert Frame"/>
                <controls:NumericUpDown x:Name="insertFrame"  Grid.Column="1" Value="{Binding InsertFrame}" IsEnabled="{Binding NotAppend}" Maximum="65535" Minimum="0" HideUpDownButtons="True" TrackMouseWheelWhenMouseOver="True"/>
                <CheckBox Margin="3, 0" Grid.Column="2" Content="Append" IsChecked="{Binding Append, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" ToolTip="Append to the end of the animation."/>
            </Grid>
            <Grid Margin="2,2,0,0" Width="250" Visibility="{Binding SmoothFrameEnabled, Converter={StaticResource boolToVisibility}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="Blend Frames"/>
                <controls:NumericUpDown Grid.Column="1" Value="{Binding SmoothFrame}" Maximum="65535" Minimum="0"/>
            </Grid>
            <Grid Margin="2,2,0,0" Width="250" Visibility="{Binding RemoveCollisionsEnabled, Converter={StaticResource boolToVisibility}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="Remove Collisions" FontSize="11" ToolTip="Remove any keyframes that are within the range of those being pasted (only on bones with pasted keyframes).&#x0a;&#x0a;If Rebase is enabled, this value does nothing."/>
                <CheckBox Grid.Column="1" IsChecked="{Binding RemoveCollisions}" VerticalAlignment="Center"/>
            </Grid>
            <Grid Margin="2,2,0,0" Width="250" Visibility="{Binding RebaseKeyframesEnabled, Converter={StaticResource boolToVisibility}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="Rebase Keyframes" FontSize="11" ToolTip="Rebase any keyframes after EndFrame or InsertFrame.&#x0a;&#x0a;Example: When using Remove Keyframe Range, modify all keyframes after End Frame to now follow on after Start Frame. "/>
                <CheckBox Grid.Column="1" IsChecked="{Binding RebaseKeyframes}" VerticalAlignment="Center"/>
            </Grid>
            <Grid Margin="2,2,0,0" Width="250" Visibility="{Binding RebaseAmountEnabled, Converter={StaticResource boolToVisibility}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="Rebase Amount"/>
                <controls:NumericUpDown x:Name="rebaseAmount" Grid.Column="1" Value="{Binding RebaseAmount, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
            <Grid Margin="2,2,0,0" Width="250" Visibility="{Binding ComponentEnabled, Converter={StaticResource boolToVisibility}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="Type"/>
                <ComboBox Grid.Column="1" SelectedItem="{Binding Component, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={StaticResource ResourceKey=componentTypes}}"/>
            </Grid>
            
            <Grid Margin="2,2,0,0" Width="250" Visibility="{Binding PosEnabled, Converter={StaticResource boolToVisibility}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="X"/>
                <controls:NumericUpDown Grid.Column="1" Value="{Binding X, UpdateSourceTrigger=PropertyChanged}" Interval="0.05" StringFormat="0.00"/>
            </Grid>
            <Grid Margin="2,2,0,0" Width="250" Visibility="{Binding PosEnabled, Converter={StaticResource boolToVisibility}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="Y"/>
                <controls:NumericUpDown Grid.Column="1" Value="{Binding Y, UpdateSourceTrigger=PropertyChanged}" Interval="0.05" StringFormat="0.00"/>
            </Grid>
            <Grid Margin="2,2,0,0" Width="250" Visibility="{Binding PosEnabled, Converter={StaticResource boolToVisibility}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="Z"/>
                <controls:NumericUpDown Grid.Column="1" Value="{Binding Z, UpdateSourceTrigger=PropertyChanged}" Interval="0.05" StringFormat="0.00"/>
            </Grid>
            <Grid Margin="2,2,0,0" Width="250" Visibility="{Binding PosEnabled, Converter={StaticResource boolToVisibility}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="W"/>
                <controls:NumericUpDown Grid.Column="1" Value="{Binding W, UpdateSourceTrigger=PropertyChanged}" Interval="0.05" StringFormat="0.00"/>
            </Grid>
            <Grid Margin="2,2,0,0" Width="250" Visibility="{Binding ScaleFactorEnabled, Converter={StaticResource boolToVisibility}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="Scale Factor"/>
                <controls:NumericUpDown x:Name="scaleFactor" Grid.Column="1" Value="{Binding ScaleFactor, UpdateSourceTrigger=PropertyChanged}" Interval="0.05" StringFormat="0.00"/>
            </Grid>
            <Grid Margin="2,2,0,0" Width="250" Visibility="{Binding NewDurationEnabled, Converter={StaticResource boolToVisibility}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="New Duration"/>
                <controls:NumericUpDown x:Name="newDuration" Grid.Column="1" Value="{Binding NewDuration, UpdateSourceTrigger=PropertyChanged}" Minimum="1"/>
            </Grid>

            <Grid Margin="2,2" Height="50">
                <Button Content="Ok" HorizontalAlignment="Left" Margin="105,10,0,0" VerticalAlignment="Top" Width="75" Command="{Binding ElementName=Window, Path=DoneCommand}"/>
            </Grid>


        </StackPanel>
    </Grid>
</controls:MetroWindow>
